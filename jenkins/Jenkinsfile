pipeline {
    agent any
 
    tools{
        maven 'maven'
        jdk 'jdk15'
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
        stage("build & SonarQube analysis") {
          //  agent any
            steps {
              withSonarQubeEnv('sonarQube') {
                sh 'mvn clean package sonar:sonar'
              }
            }
          }
    /*    stage("Quality Gate") {
            steps {
            waitForQualityGate abortPipeline: true
        }
     }*/
          stage('deploy to artifactory'){
            steps{
          
                rtUpload (
            serverId: 'ARTIFACTORY_SERVER',
            spec: '''{
                 "files": [
                             {
                                "pattern": "target/*.jar",
                                "target": "art-doc-dev-loc/java/"
                            }
                        ]
            }''',
            )
            }
        }
        
        stage('download artifact'){
            steps{
           
                 rtDownload (
                 serverId: "ARTIFACTORY_SERVER",
                spec:"""{
                     "files": [
                                {
                                    "pattern": "art-doc-dev-loc/java/**",
                                    "target": "src/artifacts/"      
                                }
                            ]
              }"""
            )
            
            }
        }
   /*       stage('upload to ec2')
           {
              steps{
          sshagent(['71b3e396-6b85-494e-ac21-18bdea4f6358']){
                   sh 'ssh -o StrictHostKeyChecking=no ubuntu@18.221.112.248 pwd'
                   sh 'scp -r /var/lib/jenkins/workspace/jfrog-artifactory/app/artifacts/todo-app/*.war ubuntu@18.221.112.248:/home/ubuntu/myartifacts'
                     }
              }
           }*/
         
        stage('upload to s3')
           {
              steps{
                //  withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'deployto_s3', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY',region:'us-west-1')]) {
                  // some block
            //}
        withAWS(region:'us-west-1',credentials:'deployto_s3') {
                  //  s3Upload(file: '/var/lib/jenkins/workspace/jfrog-artifactory/app/artifacts/todo-app/*.war', bucket:'vaishu2000', path:'artifacts/')
                      s3Upload(file: '/var/lib/jenkins/workspace/jfrog-artifactory/app/artifacts/todo-app/TodoDemo-0.0.1-SNAPSHOT.war', bucket:'vaishu2000', path:'artifacts/')

                      
        }
              }
        }
     
    }
     post{
                success{
                    echo "========Deploying executed successfully========"
                    mail bcc: '', body: 'deploying is sucesfull', cc: '', from: '', replyTo: '', subject: 'deployed', to: 'vaishnavidr123@gmail.com'
                }
                failure{
                 echo "========Deploying failed========"
                 mail bcc: '', body: 'deploying failed', cc: '', from: '', replyTo: '', subject: 'deployed', to: 'vaishnavidr123@gmail.com'
                }
            }
}
