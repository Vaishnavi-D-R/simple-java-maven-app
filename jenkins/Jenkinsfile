pipeline {
    agent any
  //  triggers {
   //     cron(*****)
    //}
    tools{
        maven 'maven'
        jdk 'jdk15'
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
        stage("build & SonarQube analysis") {
          //  agent any
            steps {
              withSonarQubeEnv('sonarQube') {
                sh 'mvn clean package sonar:sonar'
              }
            }
          }
         stage("Quality Gate") {
            steps {
               sleep(60)
               timeout(time: 1, unit: 'HOURS') {
                 script{
                         def qg = waitForQualityGate() 
                         if (qg.status != 'OK')
                         {
                             error "Pipeline aborted due to gate failure : ${qg.status}"
                             waitForQualityGate abortPipeline: true
                          }
                     }
               }
             }
         }
          stage('deploy to artifactory'){
            steps{
          
                rtUpload (
            serverId: 'ARTIFACTORY_SERVER',
            spec: '''{
                 "files": [
                             {
                                "pattern": "target/*.jar",
                                "target": "art-doc-dev-loc/java/"
                            }
                        ]
            }''',
            )
            }
        }
        
        stage('download artifact'){
            steps{
           
                 rtDownload (
                 serverId: "ARTIFACTORY_SERVER",
                spec:"""{
                     "files": [
                                {
                                    "pattern": "art-doc-dev-loc/java/**",
                                    "target": "src/artifacts/"      
                                }
                            ]
              }"""
            )
            
            }
        }
     
    }
     post{
                success{
                    echo "========Deploying executed successfully========"
                    mail bcc: '', body: 'deploying is sucesfull', cc: '', from: '', replyTo: '', subject: 'deployed', to: 'vaishnavidr123@gmail.com'
                }
                failure{
                 echo "========Deploying failed========"
                 mail bcc: '', body: 'deploying failed', cc: '', from: '', replyTo: '', subject: 'deployed', to: 'vaishnavidr123@gmail.com'
                }
            }
}
